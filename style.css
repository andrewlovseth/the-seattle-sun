@charset "UTF-8";
/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
@import url("https://cloud.typography.com/6104232/6511432/css/fonts.css");
@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono:ital,wght@0,100..800;1,100..800&display=swap");
/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Prevent font size inflation */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Remove default margin in favour of better control in authored CSS */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin: 0;
}

ul,
ol {
  margin-block: 0;
}

/* Remove list styles on ul, ol elements with a nav role, which suggests default styling will be removed */
ul[role=nav],
ol[role=nav] {
  list-style: none;
  padding: 0;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  line-height: 1.5;
}

/* Set shorter line heights on headings and interactive elements */
h1,
h2,
h3,
h4,
button,
input,
label {
  line-height: 1.1;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
  height: auto;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Make sure textareas without a rows attribute are not tiny */
textarea:not([rows]) {
  min-height: 10em;
}

/* Anything that has been anchored to should have extra scroll margin */
:target {
  scroll-margin-block: 5ex;
}

time {
  display: block;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
body {
  background: #fafafa;
}

.site {
  display: grid;
  gap: 3rem;
  grid-template-rows: auto minmax(0, 1fr) auto;
  min-height: 100vh;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
body,
button,
input,
select,
optgroup,
textarea {
  font-family: "Chronicle Text G1 A", "Chronicle Text G1 B";
}

a {
  color: #000000;
  text-decoration: none;
}

::-moz-selection {
  background: #d36135;
  color: #ffffff;
  text-shadow: none;
}

::selection {
  background: #d36135;
  color: #ffffff;
  text-shadow: none;
}

.page-title {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  text-transform: uppercase;
  font-weight: 400;
  font-size: clamp(1.6019rem, 1.3119rem + 1.45vw, 3.0519rem);
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.grid {
  display: grid;
}

.flex {
  display: flex;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-end {
  justify-content: flex-end;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-stretch {
  align-items: stretch;
}

.place-center {
  place-content: center;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.content-grid {
  display: grid;
  gap: 0 2rem;
  grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(4, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
}
@media only screen and (min-width: 30rem) {
  .content-grid {
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(8, minmax(auto, 1fr)) [content-end] minmax(0, auto) [full-width-end];
  }
}
@media only screen and (min-width: 62rem) {
  .content-grid {
    gap: 0 3rem;
    grid-template-columns: [full-width-start] minmax(0, auto) [content-start] repeat(3, minmax(0, 6rem)) [narrow-start] repeat(6, minmax(0, 6rem)) [narrow-end] repeat(3, minmax(0, 6rem)) [content-end] minmax(0, auto) [full-width-end];
  }
}
.content-grid > * {
  grid-column: content;
}

.flow > * + * {
  margin-block-start: var(--flow-spacer, 1rem);
}
.flow > .wp-block-separator {
  border-color: rgba(0, 0, 0, 0.1);
  margin-block-start: 2rem !important;
  margin-block-end: 2rem !important;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.copy-1 {
  font-size: clamp(1.125rem, 1.0375rem + 0.4375vw, 1.5625rem);
  line-height: 1.5;
}

.copy-2 {
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1.5;
}

.copy-3 {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  line-height: 1.5;
}

.copy-4 {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  line-height: 1.25;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.divider > * {
  width: 100%;
  height: 1px;
}
.divider .dark {
  background: #000000;
}
.divider .light {
  background: #bdbdbd;
}

.triple-divider .middle {
  margin: 0.25rem 0;
}

.top-divider .top {
  margin-bottom: 0.25rem;
}

.bottom-divider .bottom {
  margin-top: 0.25rem;
}

.single-divider {
  display: none;
}
@media only screen and (min-width: 62rem) {
  .single-divider {
    display: block;
  }
}
.single-divider .middle {
  background: #efefef;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.issue {
  display: grid;
  gap: 1.5rem;
}

.issue-header {
  gap: 0.75rem 2rem;
  align-items: center;
  width: 100%;
  max-width: 40rem;
  margin-inline: auto;
}
@media only screen and (min-width: 62rem) {
  .issue-header {
    max-width: unset;
    margin-inline: unset;
    gap: 1.5rem 3rem;
  }
}
.issue-header__grid {
  display: grid;
  gap: 0.75rem 3rem;
  align-items: center;
}
@media only screen and (min-width: 48rem) {
  .issue-header__grid {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
  .issue-header__grid > * {
    grid-row: 1;
  }
}
.issue-header .nameplate__link {
  display: grid;
  max-width: 12rem;
  margin-inline: auto;
  margin-top: 0.75rem;
}
@media only screen and (min-width: 48rem) {
  .issue-header .nameplate__link {
    margin-top: 0;
  }
}
@media only screen and (min-width: 62rem) {
  .issue-header .nameplate__link {
    max-width: 20rem;
  }
}
.issue-header .nameplate svg {
  width: 100%;
  height: auto;
}
.issue-header .edition {
  line-height: 1;
  text-align: center;
}
@media only screen and (min-width: 48rem) {
  .issue-header .edition {
    text-align: left;
    grid-column: 1;
  }
}
.issue-header .edition__name {
  display: block;
  font-family: "Mercury Text G4 A", "Mercury Text G4 B";
  font-size: clamp(1.125rem, 1.0375rem + 0.4375vw, 1.5625rem);
  font-weight: 400;
  text-transform: lowercase;
  letter-spacing: 0.05em;
  opacity: 0.8;
}
.issue-header .edition__tagline {
  display: block;
  font-family: "Chronicle Text G1 A", "Chronicle Text G1 B";
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-style: italic;
  line-height: 1.15;
  text-transform: none;
  letter-spacing: 0;
  color: #4a4a4a;
  padding-top: 0.25rem;
}
@media only screen and (min-width: 48rem) {
  .issue-header .edition__tagline {
    font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
    max-width: 7.5rem;
  }
}
@media only screen and (min-width: 62rem) {
  .issue-header .edition__tagline {
    font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
    max-width: unset;
  }
}
.issue-header .published {
  line-height: 1;
  display: flex;
  gap: 0.25rem;
  justify-content: space-between;
  align-items: center;
  padding-top: 0.5rem;
}
@media only screen and (min-width: 48rem) {
  .issue-header .published {
    text-align: right;
    padding-top: 0;
    display: block;
  }
}
.issue-header .published__issue {
  display: inline-block;
  font-family: "Mercury Text G4 A", "Mercury Text G4 B";
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  text-transform: uppercase;
  letter-spacing: 0.15em;
  color: #6a6a6a;
}
@media only screen and (min-width: 48rem) {
  .issue-header .published__issue {
    display: block;
    font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  }
}
@media only screen and (min-width: 62rem) {
  .issue-header .published__issue {
    font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  }
}
.issue-header .published__date {
  display: inline-block;
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  letter-spacing: 0.025em;
}
@media only screen and (min-width: 48rem) {
  .issue-header .published__date {
    display: block;
    padding-block-start: 0.25rem;
  }
}

.issue-body {
  gap: 1.5rem 2rem;
  align-items: start;
  width: 100%;
  max-width: 40rem;
  margin-inline: auto;
}
@media only screen and (min-width: 62rem) {
  .issue-body {
    max-width: unset;
    margin-inline: unset;
    gap: 2rem 3rem;
  }
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.category-badge {
  display: inline-block;
  font-family: "Decimal A", "Decimal B";
  font-size: 0.5625rem;
  font-weight: bold;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: #989898;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.section-header {
  display: grid;
  gap: 0.75rem;
  text-align: center;
}

.section-title {
  font-family: "Mercury Display A", "Mercury Display B";
  text-transform: uppercase;
  letter-spacing: 0.1em;
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  font-weight: 400;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.headline__title {
  font-weight: 400;
  line-height: 1.5;
}
.headline__title a {
  text-decoration: none;
}
.headline__title strong {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-weight: 600;
}
.headline__title--has-image {
  display: grid;
  gap: 1rem;
  grid-template-columns: 4rem 1fr;
}
.headline__title--has-image img {
  margin-top: 0.25rem;
  border-radius: 0.125rem;
}
.headline .category-badge {
  padding-top: 0.25rem;
  display: block;
  text-align: right;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.subscribe {
  display: grid;
  padding: 1rem;
  background: #f4ece2;
  border: 1px solid #ded6cb;
  box-shadow: 54px 117px 36px 0px rgba(0, 0, 0, 0), 35px 75px 33px 0px rgba(0, 0, 0, 0.01), 20px 42px 28px 0px rgba(0, 0, 0, 0.05), 9px 19px 21px 0px rgba(0, 0, 0, 0.09), 2px 5px 11px 0px rgba(0, 0, 0, 0.1);
  font-family: "JetBrains Mono", monospace;
  border-radius: 0.25rem;
  container-type: inline-size;
  max-width: 60rem;
}
@container (width >= 768px) {
  .subscribe {
    padding: 1rem;
  }
}
.subscribe__form {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.75rem;
  position: relative;
}
@container (width >= 768px) {
  .subscribe__form {
    gap: 0.75rem;
  }
}
.subscribe__label {
  color: #525252;
  text-transform: uppercase;
  font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  letter-spacing: 0.1em;
  line-height: 1;
  font-weight: 600;
}
.subscribe__input {
  flex: 1;
  border: 1px solid #bdbdbd;
  border-radius: 0;
  padding: 0.5rem;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #3d3d3d;
  font-weight: 400;
  background: #f5f0ea;
  font-family: "JetBrains Mono", monospace;
  height: 2.5rem;
  line-height: 1;
  letter-spacing: 0.05em;
  overflow: hidden;
  white-space: nowrap;
  transition: all 300ms ease;
  border-radius: 0.25rem;
}
.subscribe__input::-webkit-input-placeholder {
  color: #7c7c7c;
  font-weight: 400;
  font-style: italic;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  letter-spacing: unset;
}
.subscribe__input::-moz-placeholder {
  color: #7c7c7c;
  font-weight: 400;
  font-style: italic;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  letter-spacing: unset;
}
.subscribe__input:-moz-placeholder {
  color: #7c7c7c;
  font-weight: 400;
  font-style: italic;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  letter-spacing: unset;
}
.subscribe__input:not(:-moz-placeholder-shown) {
  border-color: #989898;
  outline: none;
}
.subscribe__input:not(:placeholder-shown), .subscribe__input:focus {
  border-color: #989898;
  outline: none;
}
.subscribe__button {
  display: flex;
  align-items: center;
  text-align: center;
  justify-content: center;
  font-family: "JetBrains Mono", monospace;
  font-size: 1.125rem;
  width: 1.625rem;
  height: 1.625rem;
  line-height: 1;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  border-radius: 50%;
  white-space: nowrap;
  position: absolute;
  z-index: 10;
  right: 0.5rem;
  top: 7px;
  text-align: center;
  transition: all 600ms ease;
  border: none;
  color: #f4ece2;
  background: #d36135;
}
.subscribe__button span {
  transform: translateX(1px);
}
.subscribe__button:hover {
  cursor: pointer;
  background: #c45123;
}
.subscribe__button:focus {
  outline: none;
}
.subscribe__receipt {
  interpolate-size: allow-keywords;
  height: 0;
  overflow-y: clip;
  transition: all 500ms ease;
}
.subscribe__receipt.is-visible {
  height: auto;
  transition: all 500ms ease;
  margin-top: 1rem;
}
.subscribe__receipt-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 0.5rem 0.75rem;
  background: #545e78;
}
.subscribe__receipt-header svg {
  height: 1.5rem;
  width: auto;
}
.subscribe__receipt-header svg path {
  fill: #f4ece2;
}
.subscribe__receipt-title {
  margin: 0;
  color: #f4ece2;
  text-transform: uppercase;
  font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  font-weight: 600;
  letter-spacing: 0.1em;
}
.subscribe__receipt-body {
  padding: 1.5rem 2rem 2rem;
  border-right: 1px solid #545e78;
  border-left: 1px solid #545e78;
  display: grid;
  gap: 2rem;
  align-items: start;
}
@container (width >= 480px) {
  .subscribe__receipt-body {
    gap: 1.5rem;
  }
}
@media (width >= 1100px) {
  .subscribe__receipt-body {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
}
.subscribe__receipt-item {
  display: grid;
  gap: 0.125rem 1rem;
  align-items: center;
}
@container (width >= 480px) {
  .subscribe__receipt-item {
    grid-template-columns: 4rem minmax(0, 1fr);
  }
}
.subscribe__receipt-label {
  font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  font-weight: 600;
  letter-spacing: 0.1em;
  line-height: 1;
  text-transform: uppercase;
  color: #99140b;
}
@container (width >= 480px) {
  .subscribe__receipt-label {
    text-align: right;
  }
}
.subscribe__receipt-value {
  border-bottom: 1px dashed #545e78;
  color: #545e78;
  padding-bottom: 0.25rem;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: 600;
  overflow: hidden;
  white-space: nowrap;
  line-height: 1.5rem;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  height: 2rem;
  display: grid;
  align-items: end;
}
.subscribe__receipt-value.user-input {
  text-transform: none;
  font-weight: 500;
  color: #545e78;
}
.subscribe__receipt-value .volume {
  rotate: 0.5deg;
}
.subscribe__receipt-value .when {
  rotate: -0.25deg;
}
.subscribe__receipt-footer {
  border: 1px solid #545e78;
  display: grid;
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.subscribe__receipt-meta {
  display: grid;
  place-items: center;
  position: relative;
  padding: 1.5rem 1rem;
}
@container (width >= 768px) {
  .subscribe__receipt-meta {
    padding: 1rem;
  }
}
.subscribe__receipt-meta:not(:last-child) {
  border-right: 1px solid #545e78;
}
.subscribe__receipt-meta-label {
  font-size: clamp(0.5119rem, 0.6469rem - 0.1125vw, 0.6244rem);
  font-weight: 600;
  letter-spacing: 0.1em;
  line-height: 1;
  text-transform: uppercase;
  position: absolute;
  top: 6px;
  right: 6px;
  color: #99140b;
}
.subscribe__receipt-meta-value {
  font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  font-weight: 500;
  letter-spacing: 0.1em;
  line-height: 1;
  color: #545e78;
  text-transform: uppercase;
  translate: 0 2px;
}
@container (width >= 768px) {
  .subscribe__receipt-meta-value {
    font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
    translate: 0 0;
  }
}
.subscribe__receipt-meta-value.date {
  rotate: -0.5deg;
}
.subscribe__receipt-meta-value.time {
  rotate: 0.5deg;
}
.subscribe__receipt-meta-value.country {
  rotate: -0.5deg;
}
.subscribe__message {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 4px;
}
.subscribe__message strong {
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  line-height: 1em;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.subscribe__message strong svg {
  transform: translateY(-1px);
}
.subscribe__message-success strong {
  color: #768a72;
}
.subscribe__message-error strong {
  color: #99140b;
}
.subscribe__message-error strong svg path {
  fill: #99140b;
}
.subscribe__message-error .subscribe__message-text {
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  letter-spacing: 0;
  text-transform: none;
}
.subscribe .formkit-powered-by-convertkit-container {
  display: none;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.spinner {
  display: inline-block;
  position: relative;
  width: 16px;
  height: 16px;
  color: #d36135;
}
.spinner div {
  box-sizing: border-box;
  display: block;
  position: absolute;
  width: 16px;
  height: 16px;
  margin: 2px;
  border: 2px solid currentColor;
  border-radius: 50%;
  animation: spinner 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: currentColor transparent transparent transparent;
}
.spinner div:nth-child(1) {
  animation-delay: -0.45s;
}
.spinner div:nth-child(2) {
  animation-delay: -0.3s;
}
.spinner div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
.htmx-indicator {
  opacity: 0;
  transition: opacity 500ms ease-in;
}

.htmx-request .htmx-indicator {
  opacity: 1;
}

.htmx-request.htmx-indicator {
  opacity: 1;
}

.fade-in {
  animation: fadeIn 500ms ease-in;
  opacity: 1;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.mobile-nav {
  position: fixed;
  top: 0;
  left: -100%;
  height: 100vh;
  width: 100%;
  z-index: 7777;
  color: #ffffff;
  background-color: #292929;
  border-right: 1px solid #464646;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.2);
  transform: translateX(-100%);
  transition: all 0.3s ease-in-out;
  padding: 3rem;
}
@media (width >= 580px) {
  .mobile-nav {
    max-width: 24rem;
  }
}
.mobile-nav.is-open {
  transform: translateX(0);
  left: 0;
}
.mobile-nav .site-nav__list {
  display: grid;
  gap: 2rem;
}
.mobile-nav .site-nav__link {
  color: #ffffff;
  display: block;
}
.mobile-nav .site-nav__link:hover .site-nav__label {
  color: #d36135;
}
.mobile-nav .site-nav__link:hover .site-nav__description {
  color: #bdbdbd;
}
.mobile-nav .site-nav__label {
  display: block;
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  text-transform: uppercase;
  letter-spacing: 0.05em;
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1;
  transition: color 0.3s ease-in-out;
}
.mobile-nav .site-nav__description {
  display: block;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-style: italic;
  color: #989898;
  transition: color 0.3s ease-in-out;
}
.mobile-nav .site-nav__close {
  position: absolute;
  top: 0;
  right: 0;
  padding: 0.75rem 1rem;
  cursor: pointer;
}
.mobile-nav .site-nav__close svg {
  width: 0.75rem;
  height: 0.75rem;
}
.mobile-nav .site-nav__close svg path {
  stroke: #ffffff;
  transition: stroke 0.3s ease-in-out;
}
.mobile-nav .site-nav__close:hover svg path {
  stroke: #d36135;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.desktop-nav.site-nav__list {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}
.desktop-nav.site-nav__link {
  display: inline-block;
  font-family: "Decimal A", "Decimal B";
  font-weight: 500;
  text-transform: uppercase;
  font-size: 0.6125rem;
  color: #3d3d3d;
  letter-spacing: 0.05em;
  transition: -webkit-text-decoration 500ms ease;
  transition: text-decoration 500ms ease;
  transition: text-decoration 500ms ease, -webkit-text-decoration 500ms ease;
  text-decoration: underline;
  text-underline-offset: 4px;
  text-decoration-thickness: 1px;
  text-decoration-color: transparent;
}
.desktop-nav.site-nav__link:hover {
  text-decoration-color: #d36135;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.site-logo {
  width: 1.5rem;
  height: 1.5rem;
}
.site-logo svg {
  width: 100%;
  height: 100%;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.subscribe-btn {
  display: inline-block;
  font-family: "Decimal A", "Decimal B";
  font-weight: 500;
  font-size: 0.6125rem;
  line-height: 1;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  border-radius: 0.25rem;
  padding: 9px 1rem 8px;
  white-space: nowrap;
  text-align: center;
  transition: all 400ms ease;
  color: #f4ece2;
  background: #d36135;
}
.subscribe-btn:hover {
  cursor: pointer;
  background: #c45123;
}
.subscribe-btn:focus {
  outline: none;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.hamburger-btn {
  display: inline-block;
  width: 1.25rem;
  height: 1.25rem;
}
.hamburger-btn svg {
  width: 100%;
  height: 100%;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.site-header {
  background-color: #f8f8f8;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid #dcdcdc;
  box-shadow: 0 4px 16px 0 rgba(61, 61, 61, 0.05);
  position: sticky;
  top: 0;
  z-index: 4444;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.site-header__left {
  display: flex;
  align-items: center;
  gap: 1.5rem;
}
.site-header__right {
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 1rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.site-footer {
  margin: 0 0 1.5rem 0;
}
.site-footer__wrapper {
  display: grid;
  align-items: center;
  padding: 0.75rem 0.75rem;
  gap: 1rem;
}
@media only screen and (min-width: 48rem) {
  .site-footer__wrapper {
    grid-template-columns: minmax(0, 1fr) minmax(0, 1fr);
  }
}
.site-footer__meta {
  text-align: center;
}
@media only screen and (min-width: 48rem) {
  .site-footer__meta {
    text-align: left;
  }
}
.site-footer__meta p {
  line-height: 1.25em;
  color: #292929;
  font-family: "Chronicle Text G1 A", "Chronicle Text G1 B";
}
.site-footer__figures {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 2rem;
}
@media only screen and (min-width: 48rem) {
  .site-footer__figures {
    justify-content: flex-end;
  }
}
.site-footer__cmyk {
  width: 1.5rem;
  height: 1.5rem;
}
@media only screen and (min-width: 48rem) {
  .site-footer__cmyk {
    width: 2rem;
    height: 2rem;
  }
}
.site-footer__cmyk svg {
  width: 100%;
  height: 100%;
}
.site-footer__upc-code {
  max-width: 2.5rem;
  mix-blend-mode: multiply;
}
@media only screen and (min-width: 48rem) {
  .site-footer__upc-code {
    max-width: 5rem;
  }
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.lead {
  display: grid;
  gap: 1.5rem;
}
@media only screen and (min-width: 62rem) {
  .lead {
    grid-column: 2/span 8;
  }
}
.lead__header {
  display: grid;
  gap: 0.75rem;
  align-items: end;
}
@media only screen and (min-width: 80rem) {
  .lead__header {
    gap: 1.5rem;
    grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
  }
}
@media only screen and (min-width: 80rem) {
  .lead__info {
    padding-bottom: 0.75rem;
  }
}
.lead__headline {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-size: clamp(1.6019rem, 1.3119rem + 1.45vw, 3.0519rem);
  font-weight: 100;
  line-height: 1;
}
.lead__dek {
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1.35;
  font-style: italic;
  padding-top: 1rem;
}
.lead__author {
  display: inline-block;
  margin-top: 3rem;
  border-top: 1px solid #dcdcdc;
  border-bottom: 1px solid #dcdcdc;
  padding-block: 0.5rem;
  padding-left: 0.5rem;
  font-family: "Mercury Text G4 A", "Mercury Text G4 B";
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  color: #2a2a2a;
  letter-spacing: 0.025em;
}
.lead__photo {
  display: grid;
  grid-template-rows: 1fr auto;
  gap: 0.25rem;
}
.lead__photo--caption {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  text-wrap: balance;
  line-height: 1.375em;
  font-style: italic;
}
.lead__photo--credit {
  display: block;
  font-size: clamp(0.5119rem, 0.6469rem - 0.1125vw, 0.6244rem);
  font-style: normal;
  text-transform: uppercase;
  letter-spacing: 0.1em;
  color: #2a2a2a;
  line-height: 1.25em;
  text-align: left;
}
@media only screen and (min-width: 48rem) {
  .lead__photo--credit {
    font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  }
}
.lead__image {
  display: block;
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.lead__body {
  position: relative;
}
.lead__copy {
  --flow-spacer: 0;
  text-indent: 1.25rem;
}
@media only screen and (min-width: 80rem) {
  .lead__copy {
    -moz-columns: 2;
         columns: 2;
    -moz-column-gap: 3rem;
         column-gap: 3rem;
  }
  .lead__copy:after {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    top: 0;
    left: 50%;
    right: auto;
  }
}
.lead__copy p:first-child {
  text-indent: 0;
}
.lead__copy p:first-child::first-letter {
  initial-letter: 2 2;
  font-family: "Chronicle Text G1 A", "Chronicle Text G1 B";
  margin-right: 0.25rem;
}
.lead__copy p:last-child::after {
  content: " ◆";
  font-size: 80%;
}
.lead__copy ul,
.lead__copy ol {
  padding: 1rem;
  text-indent: 0;
  font-size: 0.875em;
}
.lead__copy ul li,
.lead__copy ol li {
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}
.lead__copy ul li + li,
.lead__copy ol li + li {
  padding-top: 1rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.headlines {
  position: relative;
  display: grid;
  gap: 1rem;
  align-content: start;
  align-self: stretch;
}
@media only screen and (min-width: 62rem) {
  .headlines {
    grid-column: 10/span 4;
  }
  .headlines:before {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    left: -1.5rem;
    right: auto;
  }
}
.headlines__list {
  display: grid;
  gap: 1rem;
}
.headlines .headline + .headline {
  border-top: 1px solid #efefef;
  padding-top: 1rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.spotlight {
  display: grid;
  grid-template-columns: subgrid;
  gap: 1.5rem 3rem;
  align-items: start;
}
.spotlight__article {
  grid-column: 1/-1;
  display: grid;
  gap: 1rem;
  align-self: stretch;
  align-content: start;
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(1) {
    grid-column: 1/span 6;
  }
}
@media (width >= 1100px) {
  .spotlight__article:nth-child(1) {
    grid-column: 1/span 4;
  }
}
.spotlight__article:nth-child(1) .spotlight__header {
  grid-template-columns: minmax(0, 1fr) minmax(0, 3fr);
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(1) .spotlight__header {
    grid-template-columns: unset;
  }
}
@media only screen and (min-width: 80rem) {
  .spotlight__article:nth-child(1) .spotlight__header {
    grid-template-columns: minmax(0, 1fr) minmax(0, 3fr);
    align-items: start;
  }
}
.spotlight__article:nth-child(1) .spotlight__photo {
  aspect-ratio: 1/1;
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(1) .spotlight__photo {
    aspect-ratio: 4/3;
    grid-row: 2;
  }
}
@media only screen and (min-width: 80rem) {
  .spotlight__article:nth-child(1) .spotlight__photo {
    grid-row: 1;
    aspect-ratio: 1/1;
    margin-top: 0.5rem;
    border-radius: 0.125rem;
  }
}
.spotlight__article:nth-child(2) {
  position: relative;
  border-top: 1px solid #efefef;
  padding-top: 2rem;
  align-self: stretch;
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(2) {
    border-top: none;
    padding-top: 0;
    grid-column: 7/span 6;
    align-self: stretch;
    align-content: start;
  }
  .spotlight__article:nth-child(2):before {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    left: -1.5rem;
    right: auto;
  }
}
@media (width >= 1100px) {
  .spotlight__article:nth-child(2) {
    grid-column: 5/span 8;
  }
}
.spotlight__article:nth-child(2) .spotlight__header {
  grid-template-columns: minmax(0, 1fr) minmax(0, 3fr);
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(2) .spotlight__header {
    grid-template-columns: unset;
  }
}
@media only screen and (min-width: 80rem) {
  .spotlight__article:nth-child(2) .spotlight__header {
    grid-template-columns: minmax(0, 2fr) minmax(0, 1fr);
    align-items: end;
  }
}
.spotlight__article:nth-child(2) .spotlight__photo {
  aspect-ratio: 1/1;
}
@media only screen and (min-width: 62rem) {
  .spotlight__article:nth-child(2) .spotlight__photo {
    aspect-ratio: 4/3;
  }
}
@media (width >= 1100px) {
  .spotlight__article:nth-child(2) .spotlight__photo {
    aspect-ratio: 16/9;
    margin-top: 0.5rem;
    border-radius: 0.125rem;
  }
}
.spotlight__article:nth-child(2) .spotlight__body {
  position: relative;
  align-self: stretch;
}
@media only screen and (min-width: 80rem) {
  .spotlight__article:nth-child(2) .spotlight__body {
    padding-top: 0.75rem;
    -moz-column-count: 2;
         column-count: 2;
    -moz-column-gap: 3rem;
         column-gap: 3rem;
  }
  .spotlight__article:nth-child(2) .spotlight__body:before {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    left: 50%;
    right: auto;
  }
}
.spotlight__header {
  display: grid;
  gap: 1rem;
  align-items: start;
  align-content: start;
}
.spotlight__photo img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.spotlight__headline {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-style: italic;
  font-size: clamp(1.6019rem, 1.3119rem + 1.45vw, 3.0519rem);
  font-weight: 400;
  line-height: 1.125;
}
@media only screen and (min-width: 62rem) {
  .spotlight__headline {
    font-size: clamp(1.4238rem, 1.2203rem + 1.0175vw, 2.4413rem);
  }
}
.spotlight__body {
  --flow-spacer: 0;
  text-indent: 1.25rem;
}
.spotlight__body p:first-child {
  text-indent: 0;
}
.spotlight__body p:first-child::first-letter {
  initial-letter: 2 2;
  font-family: "Chronicle Text G1 A", "Chronicle Text G1 B";
  margin-right: 0.25rem;
}
.spotlight__body p:last-child::after {
  content: " ◆";
  font-size: 80%;
}
.spotlight__body ul,
.spotlight__body ol {
  padding: 1rem;
  text-indent: 0;
  font-size: 0.875em;
}
.spotlight__body ul li,
.spotlight__body ol li {
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}
.spotlight__body ul li + li,
.spotlight__body ol li + li {
  padding-top: 1rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.numbers {
  display: grid;
  gap: 1.5rem;
}
.numbers__list {
  display: grid;
  gap: 1.5rem;
  align-items: start;
}
@media only screen and (min-width: 62rem) {
  .numbers__list {
    gap: 3rem;
    grid-template-columns: repeat(3, minmax(0, 1fr));
    grid-template-rows: auto minmax(0, 1fr);
  }
}

.number {
  display: grid;
  gap: 0.75rem;
}
@media only screen and (min-width: 62rem) {
  .number {
    grid-template-rows: subgrid;
    grid-row: 1/-1;
  }
}
.number + .number {
  border-top: 1px solid #efefef;
  padding-top: 2rem;
}
@media only screen and (min-width: 62rem) {
  .number + .number {
    border-top: none;
    padding-top: 0;
  }
}
.number__header {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}
@media only screen and (min-width: 62rem) {
  .number__header {
    flex-direction: row;
    align-items: flex-end;
    gap: 0.75rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid #dcdcdc;
  }
}
.number__stat {
  font-size: clamp(2.0275rem, 1.4794rem + 2.7406vw, 4.7681rem);
  font-family: "Chronicle Comp A", "Chronicle Comp B";
  font-weight: 400;
  line-height: 1;
}
@media only screen and (min-width: 62rem) {
  .number__stat {
    font-size: clamp(1.6019rem, 1.3119rem + 1.45vw, 3.0519rem);
  }
}
.number__label {
  font-family: "Decimal A", "Decimal B";
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  color: #3d3d3d;
  font-weight: 400;
  text-wrap: balance;
  line-height: 1.4;
}
.number__label br {
  display: none;
}
@media only screen and (min-width: 62rem) {
  .number__label br {
    display: block;
  }
}
@media only screen and (min-width: 62rem) {
  .number__copy {
    align-self: start;
  }
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.map {
  display: grid;
  gap: 1.5rem 3rem;
  grid-template-columns: subgrid;
}
.map__figure {
  grid-column: 1/-1;
  aspect-ratio: 9/12;
  position: relative;
}
@media only screen and (min-width: 62rem) {
  .map__figure {
    grid-row: 1;
    grid-column: 1/span 7;
  }
}
@media only screen and (min-width: 62rem) {
  .map__figure-wrapper {
    position: sticky;
    top: 4rem;
  }
}
.map__figure .poi {
  position: absolute;
  width: 32px;
  height: 32px;
  display: block;
  z-index: 10;
}
@media only screen and (min-width: 62rem) {
  .map__figure .poi {
    width: 54px;
    height: 54px;
  }
}
.map__figure .poi:hover {
  cursor: pointer;
}
.map__figure .poi:hover .poi__popover {
  opacity: 1;
}
.map__figure .poi__popover {
  position: absolute;
  opacity: 0;
  right: 0;
  z-index: 10;
  transition: opacity 500ms ease;
  background: #ffffff;
  padding: 0.5rem 0.75rem;
  border-radius: 0.25rem;
  box-shadow: 2px 4px 12px rgba(0, 0, 0, 0.25);
}
.map__figure .poi__headline {
  font-family: "Decimal A", "Decimal B";
  font-size: clamp(0.5119rem, 0.6469rem - 0.1125vw, 0.6244rem);
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  white-space: nowrap;
}
.map__info {
  grid-column: 1/-1;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  align-content: start;
}
@media only screen and (min-width: 62rem) {
  .map__info {
    grid-row: 1;
    grid-column: 8/span 5;
  }
}
.map__list {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 3rem;
  justify-content: space-between;
}
.map__list-wrapper {
  display: grid;
  gap: 3rem;
}
.map__post {
  display: grid;
  gap: 1rem;
  grid-template-columns: 2rem 1fr;
}
.map__post-content {
  display: grid;
  gap: 0.25rem;
}
.map__icon {
  display: grid;
  place-items: center;
  width: 2rem;
  height: 2rem;
  aspect-ratio: 1/1;
  border: 2px solid #bdbdbd;
  color: #292929;
  border-radius: 50%;
  font-family: "Decimal A", "Decimal B";
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
  font-weight: bold;
}
.map__icon svg {
  width: 12px;
  height: 17px;
}
.map__icon svg path {
  fill: #bdbdbd;
}
.map__headline {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}
.map__image {
  display: flex;
  justify-content: center;
  align-items: flex-end;
}
.map__image img {
  max-width: 12rem;
  mix-blend-mode: multiply;
  filter: brightness(1.2);
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.photos {
  display: grid;
  gap: 1.5rem;
}
.photos__grid {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(auto-fit, minmax(10rem, 1fr));
}
.photos__link {
  display: block;
  aspect-ratio: 1/1;
}
.photos__link img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}
.photos__caption {
  padding: 0.5rem;
  border-radius: 0.25rem;
  color: #ffffff;
  font-family: "Decimal A", "Decimal B";
}
.photos__credit {
  text-transform: uppercase;
  font-size: clamp(0.64rem, 0.715rem - 0.0625vw, 0.7025rem);
  font-weight: 700;
}

.fslightbox-open .fslightbox-container {
  background: rgba(0, 0, 0, 0.8);
}
.fslightbox-open .fslightbox-slide-number-container,
.fslightbox-open .fslightbox-toolbar-button[title="Zoom In"],
.fslightbox-open .fslightbox-toolbar-button[title="Zoom Out"],
.fslightbox-open .fslightbox-toolbar-button[title=Thumbnails],
.fslightbox-open .fslightbox-toolbar-button[title="Turn on slideshow"],
.fslightbox-open .fslightbox-toolbar-button[title="Enter fullscreen"],
.fslightbox-open .fslightbox-thumbs {
  display: none;
}
.fslightbox-open .fslightboxc:after {
  background: unset;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.links {
  display: grid;
  gap: 1.5rem;
  position: relative;
}
@media only screen and (min-width: 62rem) {
  .links {
    grid-column: 2/span 4;
  }
  .links:after {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    top: 0;
    left: auto;
    right: -1.5rem;
  }
}
.links__list {
  display: grid;
  gap: 1.5rem;
}

.link {
  display: grid;
  grid-template-columns: 3rem minmax(0, 1fr);
  gap: 1rem;
}
.link a {
  display: block;
}
.link a:hover {
  text-decoration: none;
}
.link__icon {
  display: flex;
  justify-content: center;
  padding-top: 0.5rem;
}
.link__icon img {
  max-width: 1.5rem;
  width: 100%;
  height: auto;
  -o-object-fit: contain;
     object-fit: contain;
  mix-blend-mode: multiply;
}
.link__headline {
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  line-height: 1.1;
  font-weight: 400;
}
.link__headline-text {
  display: block;
}
.link__source {
  display: block;
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  font-family: "Mercury Display A", "Mercury Display B";
  line-height: 1.1;
  font-weight: 400;
  color: #2860eb;
  text-decoration: underline;
  letter-spacing: 0.01em;
  padding-top: 0.25rem;
}
.link__commentary {
  padding-top: 0.5rem;
  font-size: clamp(0.79rem, 0.788rem + 0.01vw, 0.8rem);
}
.link__main:hover .link__headline-text {
  text-decoration: underline;
  text-decoration-color: #7c7c7c;
  text-decoration-thickness: 0.5px;
  text-underline-offset: 2px;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.quote {
  display: grid;
  grid-template-columns: subgrid;
  align-items: end;
  align-self: center;
  border-top: 1px solid #efefef;
  padding-top: 1.5rem;
}
@media only screen and (min-width: 62rem) {
  .quote {
    grid-column: 6/span 8;
    border-top: none;
    padding-top: 0;
  }
}
@media only screen and (min-width: 80rem) {
  .quote {
    padding: 0 3rem;
  }
}
.quote .category-badge {
  grid-column: 1/-1;
  padding-bottom: 1.5rem;
}
.quote__text {
  font-size: clamp(1.4238rem, 1.2203rem + 1.0175vw, 2.4413rem);
  font-family: "Chronicle DeckCond A", "Chronicle DeckCond B";
  line-height: 1.2;
  font-weight: 300;
  grid-column: 1/-1;
  background: url(src/svg/quote.svg) no-repeat left top;
  padding-top: 1.5rem;
  padding-left: 2rem;
  padding-bottom: 1.5rem;
}
@media only screen and (min-width: 62rem) {
  .quote__text {
    grid-column: 1/span 5;
    padding-bottom: 0;
  }
}
.quote__meta {
  grid-column: 1/-1;
  display: grid;
  gap: 0.5rem;
  align-self: end;
  position: relative;
  padding-left: 2rem;
}
@media only screen and (min-width: 62rem) {
  .quote__meta {
    padding-left: 0;
    grid-column: 6/span 3;
  }
  .quote__meta:after {
    content: "";
    display: block;
    height: 100%;
    width: 1px;
    background: #efefef;
    position: absolute;
    top: 0;
    left: -1.5rem;
    right: auto;
  }
  .quote__meta::after {
    background: #dcdcdc;
  }
}
.quote__source {
  font-family: "Decimal A", "Decimal B";
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
}
.quote__caption {
  font-size: clamp(0.8888rem, 0.8665rem + 0.1113vw, 1rem);
  line-height: 1.5;
  font-style: italic;
}
.quote__caption a {
  text-decoration: underline;
  color: #2860eb;
}
.quote .divider {
  grid-column: 1/-1;
  margin-top: 1.5rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.lead-subscribe {
  display: grid;
  gap: 1rem;
  align-items: start;
  padding: 0.25rem 0 2rem;
}
.lead-subscribe__info-wrapper {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 0.5rem;
  padding: 2rem 0 0 0;
}
.lead-subscribe__title {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}
.lead-subscribe__title-label {
  display: inline-block;
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  font-family: "Mercury Text G4 A", "Mercury Text G4 B";
  font-weight: 400;
  text-transform: uppercase;
  color: #3d3d3d;
  letter-spacing: 0.1em;
  line-height: 1;
}
.lead-subscribe__title svg path {
  stroke: #d36135;
  stroke-width: 1.75px;
}
.lead-subscribe__headline {
  font-style: italic;
  transform: translateY(1px);
}

.subscribe .formkit-powered-by-convertkit-container {
  display: none;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.page-template-subscribe .page-title {
  text-align: center;
  font-size: clamp(2.0275rem, 1.4794rem + 2.7406vw, 4.7681rem);
}
@media only screen and (min-width: 62rem) {
  .page-template-subscribe .subscribe {
    grid-column: 4/span 8;
  }
}
@media only screen and (min-width: 90rem) {
  .page-template-subscribe .subscribe {
    grid-column: 5/span 6;
  }
}
.page-template-subscribe .formkit-fields {
  gap: 1rem !important;
}
.page-template-subscribe .formkit-field {
  flex: 1 !important;
  margin: 0 !important;
}
.page-template-subscribe .formkit-submit {
  flex: unset !important;
  margin: 0 !important;
}

.subscribe-landing-page {
  row-gap: 2rem;
}
@media only screen and (min-width: 62rem) {
  .subscribe-landing-page__content {
    grid-column: 4/span 8;
  }
}
@media only screen and (min-width: 90rem) {
  .subscribe-landing-page__content {
    grid-column: 5/span 6;
  }
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.newsletter-header {
  text-align: center;
  padding-bottom: 3rem;
}
.newsletter-header__description {
  font-size: clamp(1rem, 0.95rem + 0.25vw, 1.25rem);
  color: #7c7c7c;
  font-style: italic;
}

.newsletter-archive__grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(10rem, 1fr));
  gap: 1rem;
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.about-page .page-title {
  text-align: center;
  font-size: clamp(2.0275rem, 1.4794rem + 2.7406vw, 4.7681rem);
  padding-bottom: 2rem;
}
@media only screen and (min-width: 62rem) {
  .about-page__content {
    grid-column: 4/span 8;
  }
}
@media only screen and (min-width: 90rem) {
  .about-page__content {
    grid-column: 5/span 6;
  }
}

/*

    Theme Name: The Seattle Sun
    Theme URI: https://theseattlesun.com/
    Description: Version 1.0 of The Seattle Sun
    Version: 1.0

*/
.contact-page .page-title {
  text-align: center;
  font-size: clamp(2.0275rem, 1.4794rem + 2.7406vw, 4.7681rem);
  padding-bottom: 2rem;
}
@media only screen and (min-width: 62rem) {
  .contact-page__content {
    grid-column: 4/span 8;
  }
}
@media only screen and (min-width: 90rem) {
  .contact-page__content {
    grid-column: 5/span 6;
  }
}
.contact-page__content a {
  text-decoration: underline;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
